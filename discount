from enum import Enum, auto #enum is a distinct data type & auto is a helper function

class DiscountType(Enum):
STANDARD = auto()
SEASONAL = auto()
WEIGHT = auto()
def get_discounted_price(cart_weight, total_price, discount_type):
#According to the Question and its discounts
#for SD discount, Weight (any) then discount=6%
#for seas discount, Weight (any) then discount =12%
#for others disc, If weight <=10 then disc =6%
#for other disc, If weight>10, then disc=18%
# Determine the discount based on the type
if discount_type == DiscountType.STANDARD:
discount = 0.06 # 6% for STANDARD discount
elif discount_type == DiscountType.SEASONAL:
discount = 0.12 # 12% for SEASONAL discount
elif discount_type == DiscountType.WEIGHT:
# Apply weight-based discount
discount = 0.18 if cart_weight > 10 else 0.06
else:
raise ValueError("Invalid discount type") #Exception handling
# Calculate the discounted price
final_price = total_price * (1 - discount) # Formula
Discounted Price=Total Price×(1−Discount Rate)
return round(final_price, 2)# round used to return it in floating value for price

print(get_discounted_price(12, 100, DiscountType.WEIGHT))
